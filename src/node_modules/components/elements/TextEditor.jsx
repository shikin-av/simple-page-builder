import React from 'react'
import {EditorState, convertToRaw, ContentState} from 'draft-js'
import {Editor} from 'react-draft-wysiwyg'
import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'
import draftToHtml from 'draftjs-to-html'
import htmlToDraft from 'html-to-draftjs'

import Svg from 'svg/text.svg'

export class TextEditor extends React.Component {
	state = {
    	editorState: EditorState.createEmpty(),
	}
	  
	componentWillMount = () => {
		const {content} = this.props		
		if(content){
			const blocksFromHtml = htmlToDraft(content)
			const {contentBlocks, entityMap} = blocksFromHtml
			const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap)
			this.setState({editorState: EditorState.createWithContent(contentState)})
		}
	}
	
	onEditorStateChange = editorState => {
	    this.setState({
			editorState,
	    })
	}

	render() {
	    const {editorState} = this.state;
	    return (
			<div>
				<Editor
					editorState={editorState}
					wrapperClassName="demo-wrapper"
					editorClassName="demo-editor"
					onEditorStateChange={this.onEditorStateChange}
				/>
				<textarea
					disabled
					value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}
				/>
			</div>
	    )
  	}
}

export const Tile = props => (
	<div>
		Tile:{props.content}
	</div>
)

export const button = {
    name:   'Редактор текста',
    svg:    Svg,
}
