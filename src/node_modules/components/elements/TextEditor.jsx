import React from 'react'
import {EditorState, convertToRaw, ContentState} from 'draft-js'
import {Editor} from 'react-draft-wysiwyg'
import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'
import draftToHtml from 'draftjs-to-html'
import htmlToDraft from 'html-to-draftjs'

import {withStyles} from '@material-ui/core/styles'
import grey from '@material-ui/core/colors/grey'

import Svg from 'svg/text.svg'

class TextEditor extends React.Component {
	state = {
		editorState: EditorState.createEmpty(),
		showToolbar: false
	}

	options = {
		options: [
			'inline', 
			'blockType', 
			'fontSize', 
			'list', 
			'textAlign', 
			'colorPicker', 
			'link', 
			'image', 
			'history'
		],
		inline: {inDropdown: true},
		blockType: {inDropdown: true},
		list: {inDropdown: true},
		textAlign: {inDropdown: true},
		link: {inDropdown: true},	
	}
	  
	componentWillMount = () => {
		const {content} = this.props		
		if(content){
			const blocksFromHtml = htmlToDraft(content)
			const {contentBlocks, entityMap} = blocksFromHtml
			const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap)
			this.setState({editorState: EditorState.createWithContent(contentState)})
		}
	}
	
	onEditorStateChange = editorState => {
	    this.setState({
			editorState,
	    })
	}

	render() {
		const {editorState, showToolbar} = this.state
		const {classes} = this.props
	    return (
			<div>
				<Editor
					editorState={editorState}
					wrapperClassName={classes.root}
					toolbarClassName={classes.editor}
					onEditorStateChange={this.onEditorStateChange}					
					toolbarStyle={showToolbar ? {display: 'flex'} : {display: 'none'}}
					onFocus={() => this.setState({showToolbar: true})}
					onBlur={() => this.setState({showToolbar: false})}
					toolbar={this.options}
				/>
				{/*<textarea
					disabled
					value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}
				/>*/}
			</div>
	    )
  	}
}

const styles = theme => ({
	root: {
		background: theme.palette.background.paper,
		//padding: 20,
		border: `1px solid ${grey[100]}`
	},
	editor: {
		marginTop: '-20px',
		marginLeft: '-20px',
		marginBottom: '-10px',
		marginTop: '-16px',
		//width: '170%',	//TODO
	},
})

export const TextEditorWithStyles = withStyles(styles)(TextEditor)

export const Tile = props => (
	<div>
		Tile:{props.content}
	</div>
)

export const button = {
    name:   'Редактор текста',
    svg:    Svg,
}
