import React from 'react'
import {withStyles} from '@material-ui/core/styles'

import IconButton from '@material-ui/core/IconButton'
import AddIcon from '@material-ui/icons/Add'
import CloseIcon from '@material-ui/icons/Close'
import Divider from '@material-ui/core/Divider'
import grey from '@material-ui/core/colors/grey'

import Tools from 'components/Tools'

class AppendRow extends React.Component {
    state = {
        isShowTools: false,
    }

    isShowTools = () => {        
        this.setState({isShowTools: true}, () => {
            this.props.onShowTools(true)
        })
    }

    hideTools = () => {
        this.setState({isShowTools: false}, () => {
            this.props.onShowTools(false)
        })
    }

    selectRowHandler = ({type, id}) => {
        this.setState({isShowTools: false}, () => {
            this.props.selectRowHandler({type, id})
        })
    }

    render() {
        const {
            classes, 
            isShowTools: isShowToolsProps,
            id,
        } = this.props
        const {isShowTools: isShowToolsState} = this.state
        
        let clickHandler = () => {}
        let isDisabled = false
        let Icon = null
        if(isShowToolsState){
            clickHandler = this.hideTools 
            Icon = () => (<CloseIcon/>)
        } else {
            clickHandler = this.isShowTools
            isDisabled = isShowToolsProps
            Icon = () => (<AddIcon/>)
        }
        return (
            <div className={classes.append}>                
                <div 
                    className={classes.tools}
                    style={
                        isShowToolsState ? 
                        {
                            opacity: 1,
                            height: 'auto',
                        } 
                        : 
                        {
                            opacity: 0,
                            height: 0,
                        }
                    }
                >
                    <Divider/>
                    <Tools selectRowHandler={val => this.selectRowHandler({type: val, id: id})}/>  
                </div>
                <IconButton 
                    className={classes.icon}
                    onClick={clickHandler}
                    disabled={isDisabled}                    
                >
                    <Icon/>                
                </IconButton>
            </div>
        )
    }    
}

const delay = 300
const styles = theme => ({
    append: {
        //display: 'flex',
        //justifyContent: 'center',
        //margin: '-30px auto',        
    },
    icon: {
        //margin: theme.spacing.unit * 2,
        width: 36,
        height: 36,
        margin: '-23px auto',
        display: 'block',
        backgroundColor: grey[400],
        color: theme.palette.background.paper,
        '&:hover': {
            //color: grey[800],
            backgroundColor: grey[500],
            transition: `background-color ${delay}ms`,
        },
    },
    tools: {
        width: '100%',        
        transition: '0.3s',        
    }
})

export default withStyles(styles)(AppendRow)