import React from 'react'
import {withStyles} from '@material-ui/core/styles'
import {
    object, 
    bool, 
    number, 
    func
} from 'prop-types'

import IconButton from '@material-ui/core/IconButton'
import AddIcon from '@material-ui/icons/Add'
import CloseIcon from '@material-ui/icons/Close'
import Divider from '@material-ui/core/Divider'
import grey from '@material-ui/core/colors/grey'

import Tools from 'components/Tools'

class AppendRow extends React.Component {
    static propTypes = {
        classes:       object.isRequired,
        isShowTools:   bool.isRequired,
        id:            number.isRequired,
        addRowHandler: func.isRequired,
    }

    state = {
        isShowTools: false,
    }

    isShowTools = () => {        
        this.setState({isShowTools: true}, () => {
            this.props.onShowTools(true)
        })
    }

    hideTools = () => {
        this.setState({isShowTools: false}, () => {
            this.props.onShowTools(false)
        })
    }

    selectRowHandler = ({type, id}) => {
        this.setState({isShowTools: false}, () => {
            this.props.addRowHandler({type, id})
        })
    }

    render() {
        const {
            classes, 
            isShowTools: isShowToolsProps,
            id,
        } = this.props
        const {isShowTools: isShowToolsState} = this.state
                
        if(isShowToolsState){
            return (
                <div className={classes.root}>
                    <div className={classes.tools}>
                        <Divider/>
                        <Tools selectRowHandler={val => this.selectRowHandler({type: val, id: id})}/>
                    </div>
                    <IconButton 
                        className={classes.icon}
                        onClick={this.hideTools}
                    >
                        <CloseIcon/>            
                    </IconButton>
                </div>
            )
        } else {
            return (
                <IconButton 
                    className={classes.icon}
                    onClick={this.isShowTools}
                    disabled={isShowToolsProps}
                >
                    <AddIcon/>            
                </IconButton>
            )
        }
    }    
}

const delay = 300
const styles = theme => ({
    root: {
        zIndex: 100,
    },
    icon: {
        //margin: theme.spacing.unit * 2,
        width: 36,
        height: 36,
        margin: '-19px auto',
        marginBottom: '-6px',
        display: 'block',
        backgroundColor: grey[400],
        color: theme.palette.background.paper,
        '&:hover': {
            backgroundColor: grey[500],
            transition: `background-color ${delay}ms`,
        },
    },
    tools: {
        width: '100%',        
        transition: '0.3s',        
    }
})

export default withStyles(styles)(AppendRow)