import React from 'react'
import _ from 'lodash'
import {object} from 'prop-types'

import elements from 'components/elements'

import AddIcon from '@material-ui/icons/Add'
import {withStyles} from '@material-ui/core/styles'
import Grid from '@material-ui/core/Grid'
import IconButton from '@material-ui/core/IconButton'
import Tooltip from '@material-ui/core/Tooltip'
import grey from '@material-ui/core/colors/grey'
import green from '@material-ui/core/colors/green'

class ElementPlace extends React.Component {
    static propTypes = {
        element: object.isRequired,
        row:     object.isRequired,
    }
    
    state = {
        element:      null,
        showElements: false,
    }

    componentWillMount = () => {
        const {element} = this.props
        if(element){
            this.setState({
                element: elements[_.findIndex(elements, el => {return el.type === element.type})]
            })
        }
    }

    selectElement = element => {
        this.setState({element})
    }

    render(){
        const {element, showElements} = this.state
        const {classes, row} = this.props
        if(element){            
            return (
                <Grid item xs zeroMinWidth className={classes.root}>
                    <element.edit 
                        content={this.props.element.content}
                        row={row}
                    />
                </Grid>
            )
        } else {
            if(showElements){
                return (
                    <Grid item xs zeroMinWidth className={classes.root}>
                        <div className={classes.elements}>
                            {
                                elements.map(element => (
                                    <Tooltip title={element.tooltip} key={element.type}>
                                        <IconButton                                         
                                            variant='outlined'
                                            onClick={() => this.selectElement(element)}
                                        >
                                            <element.icon/>
                                        </IconButton>
                                    </Tooltip>
                                ))
                            }
                        </div>
                    </Grid>
                )
            } else {
                return (
                    <Grid item xs zeroMinWidth className={classes.root}>
                        <Tooltip title='Добавить элемент'>
                            <IconButton 
                                variant='outlined'
                                className={classes.add}
                                onClick={() => this.setState({showElements: true})}
                            >
                                <AddIcon/>
                            </IconButton>
                        </Tooltip>
                    </Grid>
                )
            }
        }
    }
}

const styles = theme => ({
    root: {
        //backgroundColor: theme.palette.background.paper,
        //backgroundColor: grey[50],
        minHeight: 50,
        margin: '0px 20px',
        //border: '1px solid #9e9e9e75',

    },
    add: {
        display: 'block',
        margin: '0 auto',
        marginTop: 19,
        backgroundColor: theme.palette.background.paper,
        //color: green[700],
        //borderColor: green[700],
        border: '1px solid',
        borderRadius: 4,
        width: 36,
        height: 36,
    },
    elements: {
        margin: '0 auto',
        display: 'table',
        marginTop: 19,
    }
})

export default withStyles(styles)(ElementPlace)