import React from 'react'
import 'typeface-roboto'
import { withStyles } from '@material-ui/core/styles'
import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'
import _ from 'lodash'

import blue from '@material-ui/core/colors/blue'

//import Tools from 'components/Tools'
import Row from 'components/Row'
import rowTypes from 'components/rows'

import fake from 'components/fake'

class App extends React.Component {
    state = {
        mode: 'edit',
        isShowTools: false,
        rows: fake,
    }

    onShowTools = val => {
        this.setState({isShowTools: val})
    }

    addRow = ({rowTypeId, id}) => {
        const {rows} = this.state
        const prevRowId = id
        
        const prevRowIndex = _.findIndex(rows, row => {
            return row.id === prevRowId
        })
        if(prevRowIndex !== -1){
            const prevRows = _.take(rows, prevRowIndex + 1)                
            const nextRows = _.difference(rows, prevRows)
            prevRows.push({
                id: Math.random(),
                type: rowTypeId,
                elements: []
            })
            const resultRows = _.concat(prevRows, nextRows)            
            this.setState({
                isShowTools: false,
                rows: resultRows,
            })
        }
        
    }
    
    render() {
        const {classes} = this.props
        const {
            mode, 
            rows, 
            isShowTools
        } = this.state
        
        return (
            <MuiThemeProvider theme={theme}>
                <div className={classes.root}>
                    {rows.map(row => {
                        let Content = rowTypes[_.findIndex(rowTypes, rowType => {return rowType.id == row.type})]
                        switch(mode) {
                            case 'edit':
                                Content = Content.edit
                                break
                            case 'preview':
                                Content = Content.preview
                                break
                        }
                        return (
                            <Row 
                                mode={mode}
                                key={row.id}
                                id={row.id}
                                onShowTools={this.onShowTools}
                                isShowTools={isShowTools}
                                selectRowHandler={this.addRow}
                            >
                                <Content elements={row.elements}/>
                            </Row>
                        )
                    })}
                </div>
            </MuiThemeProvider>
        )        
    }
}

const styles = theme => ({
    root: {        
        backgroundColor: theme.palette.background.paper,
    },
})

const theme = createMuiTheme({
    palette: {
        primary: blue,
        secondary: {
            main: blue['A700'],
        },
    },
})

export default withStyles(styles)(App)