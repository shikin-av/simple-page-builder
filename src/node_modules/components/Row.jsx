import React from 'react'
import {
    string, 
    number, 
    func,
    node,
    bool,
    object,
} from 'prop-types'

import {withStyles} from '@material-ui/core/styles'
import Divider from '@material-ui/core/Divider'
import IconButton from '@material-ui/core/IconButton'
import DeleteIcon from '@material-ui/icons/Delete'
import grey from '@material-ui/core/colors/grey'

import Tools from 'components/Tools'
//import AppendRow from 'components/AppendRow'

class Row extends React.Component {
    static propTypes = {
        classes:        object.isRequired,
        mode:           string.isRequired,
        id:             number.isRequired,
        onShowTools:    func.isRequired,
        isShowTools:    bool.isRequired,
        children:       node.isRequired,
        addHandler:     func.isRequired,
        deleteHandler:  func.isRequired,
    }

    state = {
        status: 'load'
    }

    componentDidMount() {
        const {mode} = this.props
        this.setState({status: mode})
    }

    componentWillReceiveProps(nextProps) {
        const oldMode = this.props.mode
        const newMode = nextProps.mode
        
        if (newMode !== oldMode) {
            this.setState({status: newMode})
        }
    }    

    deleteHandler = () => {
        const {id, deleteHandler} = this.props
        deleteHandler(id)
    }
    
    render() {
        const {status} = this.state
        const {
            children, 
            classes,             
        } = this.props
        switch(status) {
            case 'load':
                return (
                    <div>
                        ShadowComponent
                    </div>
                )
                break
            case 'edit':
                return (
                    <div>
                        <IconButton 
                            className={classes.delete}
                            onClick={this.deleteHandler}
                        >
                            <DeleteIcon/>            
                        </IconButton>
                        <div className={classes.root}>
                            {children}
                        </div>                        
                        <Divider/>
                    </div>
                )
                break       
            case 'preview':
                return (
                    <div>                        
                        {children}
                    </div>
                )
                break            
        }        
    }
}

const styles = theme => ({
    root: {
        //backgroundColor: grey[200],
        minHeight: 70,
        padding: '0px 20px',
        margin: 10,
        //border: `1px solid ${grey[500]}`,
    },
    delete: {        
        width: 36,
        height: 36,
        right: 0,
        position: 'absolute',
        color: grey[500],
    }
})

export default withStyles(styles)(Row)