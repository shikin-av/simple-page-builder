import React from 'react'
import {
    string, 
    number, 
    func,
    node,
    bool,
    object,
} from 'prop-types'

import {withStyles} from '@material-ui/core/styles'
import Menu from '@material-ui/core/Menu'
import MenuItem from '@material-ui/core/MenuItem'
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions'
import DialogTitle from '@material-ui/core/DialogTitle'
import DialogContent from '@material-ui/core/DialogContent'
import Button from '@material-ui/core/Button'
import IconButton from '@material-ui/core/IconButton'
import DeleteIcon from '@material-ui/icons/Delete'
import MoreVertIcon from '@material-ui/icons/MoreVert'
import ColorIcon from '@material-ui/icons/ColorLens'

import DeleteDialog from 'components/dialogs/Delete'
import ColorDialog from 'components/dialogs/SelectColor'
import colors from 'colors'

class Row extends React.Component {
    static propTypes = {
        classes:          object.isRequired,
        mode:             string.isRequired,
        id:               number.isRequired,
        showToolsHandler: func.isRequired,
        children:         node.isRequired,
        addHandler:       func.isRequired,
        deleteHandler:    func.isRequired,
        color:            string,
    }

    state = {
        status: 'load',
        anchorEl: null,
        showDeleteDialog: false,
        showColorDialog: false,
    }

    componentDidMount() {
        const {mode} = this.props
        this.setState({status: mode})
    }

    componentWillReceiveProps(nextProps) {
        const oldMode = this.props.mode
        const newMode = nextProps.mode
        
        if (newMode !== oldMode) {
            this.setState({status: newMode})
        }
    }    

    openMenu = e => {
        this.setState({anchorEl: e.currentTarget})
    }

    closeMenu = () => {
        this.setState({anchorEl: null})
    }    

    menu = () => {
        const {classes} = this.props
        const {
            anchorEl,
            showDeleteDialog,
            showColorDialog,
        } = this.state
        return (
            <div className={classes.menu}>
                <IconButton                            
                    onClick={this.openMenu}
                    className={classes.menuButton}
                >
                    <MoreVertIcon/>
                </IconButton>
                <Menu
                    open={Boolean(anchorEl)}
                    anchorEl={anchorEl}
                    onClose={this.closeMenu}                            
                >
                    <MenuItem 
                        onClick={this.openDeleteDialog}
                    >
                        <DeleteIcon/>Удалить линию
                    </MenuItem>
                    <MenuItem 
                        onClick={this.openColorDialog}
                    >
                        <ColorIcon/>Цвет фона
                    </MenuItem>
                </Menu>
                <DeleteDialog
                    title='Удалить линию?'
                    showDialog={showDeleteDialog}
                    acceptHandler={this.deleteHandler}
                    cancelHandler={() => this.setState({
                        showDeleteDialog: false,
                        anchorEl:         null,
                    })}
                />
                <ColorDialog
                    title='Выберите цвет фона'
                    showDialog={showColorDialog}
                    acceptHandler={this.selectColorHandler}
                    cancelHandler={() => this.setState({
                        showColorDialog: false,
                        anchorEl:         null,
                    })}
                    colors={colors}
                />
            </div>   
        )
    }

    openDeleteDialog = () => {
        this.setState({
            showDeleteDialog: true,
            anchorEl:         null,
        })
    }

    deleteHandler = () => {
        const {id, deleteHandler} = this.props
        deleteHandler(id)
    }

    openColorDialog = () => {
        this.setState({
            showColorDialog: true,
            anchorEl:         null,
        })
    }    

    selectColorHandler = color => {
        const {id, selectColorHandler} = this.props
        this.setState({showColorDialog: false}, () => {
            selectColorHandler({id, color})
        })        
    }
    
    render() {
        const {status} = this.state
        const {
            children, 
            classes,
            color,
        } = this.props
        
        switch(status) {
            case 'load':
                return (
                    <div>
                        ShadowComponent
                    </div>
                )
                break
            case 'edit':
                return (
                    <div>
                        {this.menu()}                                                                   
                        <div 
                            className={classes.root}
                            style={color ? {backgroundColor: color} : null}
                        >
                            {children}
                        </div>                        
                    </div>
                )
                break       
            case 'preview':
                return (
                    <div
                        className={classes.root} 
                        style={color ? {backgroundColor: color} : null}
                    >
                        {children}
                    </div>
                )
                break            
        }        
    }
}

const styles = theme => ({
    root: {
        minHeight: 70,
        padding: '25px 20px',
        //margin: 10,
    },
    menu: {        
        width: 36,
        height: 36,
        right: 0,
        position: 'absolute',
    },
    menuButton: {
        top: 5,
        right: 0,
        position: 'absolute',
        borderRadius: 0,
    }
})

export default withStyles(styles)(Row)